public class MockObjects
    {

        public HttpClient CreateHttpClientR(StringContent mockContent)
        {
            if (mockContent == null)
            {
                mockContent = new StringContent("{OK}");
            }

            var mockHttp = new MockHttpMessageHandler();
            string jsonResponse = mockContent.ReadAsStringAsync().Result;
            // Setup a respond for the user api (including a wildcard in the URL)
            mockHttp.When("https://mockurl/api/*")
                    .Respond(HttpStatusCode.OK,"application/json",jsonResponse); // Respond with JSON

            mockHttp.When(HttpMethod.Post,"https://mockurl/*")
                    .Respond(HttpStatusCode.OK, "application/json", jsonResponse); // Respond with JSON

            // Inject the handler or client into your application code
            return mockHttp.ToHttpClient();
        }


        public void StartUpConfig(out Mock<IConfiguration> mockConfiguration, out ServiceCollection services)
        {
            var mockConfSection = new Mock<IConfigurationSection>();
            mockConfSection.SetupGet(m => m[It.Is<string>(s => s == "default")]).Returns("mock value");

            mockConfiguration = new Mock<IConfiguration>();
            mockConfiguration.Setup(a => a.GetSection(It.Is<string>(s => s == "ConnectionStrings"))).Returns(mockConfSection.Object);
            services = new ServiceCollection();
        }
    }
